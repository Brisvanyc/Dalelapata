/*!
 * devextreme-angular
 * Version: 20.1.3
 * Build date: Fri Apr 24 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxiTextEditorButton } from './base/text-editor-button-dxi';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
var DxiButtonComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DxiButtonComponent, _super);
    function DxiButtonComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiButtonComponent.prototype, "_optionPath", {
        get: function () {
            return 'buttons';
        },
        enumerable: true,
        configurable: true
    });
    DxiButtonComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxiButtonComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
        tslib_1.__param(1, Host()),
        tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiButtonComponent);
DxiButtonComponent.ɵfac = function DxiButtonComponent_Factory(t) { return new (t || DxiButtonComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxiButtonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxiButtonComponent, selectors: [["dxi-button"]], inputs: { location: "location", name: "name", options: "options", cssClass: "cssClass", hint: "hint", icon: "icon", onClick: "onClick", template: "template", text: "text", visible: "visible" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiButtonComponent_Template(rf, ctx) { }, styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiButtonComponent, [{
        type: Component,
        args: [{
                selector: 'dxi-button',
                template: '',
                providers: [NestedOptionHost],
                inputs: [
                    'location',
                    'name',
                    'options',
                    'cssClass',
                    'hint',
                    'icon',
                    'onClick',
                    'template',
                    'text',
                    'visible'
                ],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, null); })();
    return DxiButtonComponent;
}(DxiTextEditorButton));
export { DxiButtonComponent };
var DxiButtonModule = /** @class */ (function () {
    function DxiButtonModule() {
    }
DxiButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxiButtonModule });
DxiButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxiButtonModule_Factory(t) { return new (t || DxiButtonModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxiButtonModule, { declarations: [DxiButtonComponent], exports: [DxiButtonComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiButtonModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxiButtonComponent
                ],
                exports: [
                    DxiButtonComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxiButtonModule;
}());
export { DxiButtonModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLWR4aS5qcyIsInNvdXJjZXMiOlsibmc6L2RldmV4dHJlbWUtYW5ndWxhci91aS9uZXN0ZWQvYnV0dG9uLWR4aS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7R0FXRzs7QUFFSCxvQ0FBb0M7QUFFcEMsaURBQWlEO0FBRWpELE9BQU8sRUFDSCxTQUFTLEVBQ1QsUUFBUSxFQUNSLElBQUksRUFDSixRQUFRLEVBQ1gsTUFBTSxlQUFlLENBQUM7QUFNdkIsT0FBTyxFQUNILGdCQUFnQixHQUNuQixNQUFNLHlCQUF5QixDQUFDO0FBQ2pDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLCtCQUErQixDQUFDOzs7QUFxQnBFO0lBQXdDLDhDQUFtQjtJQU92RCw0QkFBZ0MsZ0JBQWtDLEVBQ2xELFVBQTRCO1FBRDVDLFlBRUksaUJBQU8sU0FHVjtRQUZHLGdCQUFnQixDQUFDLGVBQWUsQ0FBQyxLQUFJLENBQUMsQ0FBQztRQUN2QyxVQUFVLENBQUMsT0FBTyxDQUFDLEtBQUksRUFBRSxLQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxLQUFJLENBQUMsQ0FBQyxDQUFDOztJQUM5RCxDQUFDO0lBVkQsc0JBQWMsMkNBQVc7YUFBekI7WUFDSSxPQUFPLFNBQVMsQ0FBQztRQUNyQixDQUFDOzs7T0FBQTs7Z0JBR2lELGdCQUFnQix1QkFBckQsUUFBUSxZQUFJLElBQUk7Z0JBQ0QsZ0JBQWdCLHVCQUFuQyxJQUFJOztJQVJKLGtCQUFrQix1QkFBdUIsU0FsQnJELFNBQVMsQ0FBQyxjQUNQLFFBQVEsRUFBRSxZQUFZLHZEQWlCbEIsQ0FPUyxtQkFBQSxRQUFRLEVBQUUsQ0FBQSxFQUFFLG1CQUFBLElBQUksRUFBRSxDQUFBO1FBdkIvQixRQUFRLEVBQUUsRUFBRSxjQUVaLDFCQXNCUyxtQkFBQSxJQUFJLEVBQUUsQ0FBQTtPQXRCTixFQUFFLENBQUMsZ0JBQWdCLENBQUMsY0FDN0IsTUFBTSxFQUFFLEFBb0IwQyxnQkFBZ0I7QUFuQjlELFVBQVUsa0JBQ1YsaEJBbUJ3QixnQkFBZ0I7R0FuQmxDLGtCQUNOLGRBVUssa0JBQWtCLENBZTlCO0VBekJnQixrQkFDVCxVQUFVLGtCQUNWLE1BQU0sa0JBQ04sTUFBTSxrQkFDTixTQUFTLGtCQUNULFVBQVUsa0JBQ1YsTUFBTSxrQkFDTixTQUFTLGNBQ1o7S0FiUSxFQUFFLFdBY2QsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tDQWlCRjtJQURBLHlCQUFDO0NBQUEsQUFmRCxDQUF3QyxtQkFBbUIsR0FlMUQ7U0FmWSxrQkFBa0I7QUF5Qi9CO0lBQUE7SUFBK0IsQ0FBQztJQUFuQixlQUFlLGdDQVIzQixRQUFRLENBQUMsY0FDUjtXQUFZLEVBQUUsa0JBQ1osa0JBQWtCLGNBQ25CLGNBQ0QsT0FBTyxFQUFFLGtCQUNQLGtCQUFrQixjQUNuQjtRQUNGLENBQUMsUUFDVyxlQUFlLENBQUk7Ozs7Ozs7Ozs7O2dEQUNoQztJQUQrQixzQkFBQztDQUFBLEFBQWhDLElBQWdDO1NBQW5CLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxuICogVmVyc2lvbjogMjAuMS4zXG4gKiBCdWlsZCBkYXRlOiBGcmkgQXByIDI0IDIwMjBcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTIgLSAyMDIwIERldmVsb3BlciBFeHByZXNzIEluYy4gQUxMIFJJR0hUUyBSRVNFUlZFRFxuICpcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcbiAqIG9mIHRoZSBNSVQgbGljZW5zZS4gU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QgZm9yIGRldGFpbHMuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXG4gKi9cblxuLyogdHNsaW50OmRpc2FibGU6bWF4LWxpbmUtbGVuZ3RoICovXHJcblxyXG4vKiB0c2xpbnQ6ZGlzYWJsZTp1c2UtaW5wdXQtcHJvcGVydHktZGVjb3JhdG9yICovXHJcblxyXG5pbXBvcnQge1xyXG4gICAgQ29tcG9uZW50LFxyXG4gICAgTmdNb2R1bGUsXHJcbiAgICBIb3N0LFxyXG4gICAgU2tpcFNlbGZcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcblxyXG5cclxuXHJcblxyXG5pbXBvcnQge1xyXG4gICAgTmVzdGVkT3B0aW9uSG9zdCxcclxufSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IER4aVRleHRFZGl0b3JCdXR0b24gfSBmcm9tICcuL2Jhc2UvdGV4dC1lZGl0b3ItYnV0dG9uLWR4aSc7XHJcblxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2R4aS1idXR0b24nLFxyXG4gICAgdGVtcGxhdGU6ICcnLFxyXG4gICAgc3R5bGVzOiBbJyddLFxyXG4gICAgcHJvdmlkZXJzOiBbTmVzdGVkT3B0aW9uSG9zdF0sXHJcbiAgICBpbnB1dHM6IFtcclxuICAgICAgICAnbG9jYXRpb24nLFxyXG4gICAgICAgICduYW1lJyxcclxuICAgICAgICAnb3B0aW9ucycsXHJcbiAgICAgICAgJ2Nzc0NsYXNzJyxcclxuICAgICAgICAnaGludCcsXHJcbiAgICAgICAgJ2ljb24nLFxyXG4gICAgICAgICdvbkNsaWNrJyxcclxuICAgICAgICAndGVtcGxhdGUnLFxyXG4gICAgICAgICd0ZXh0JyxcclxuICAgICAgICAndmlzaWJsZSdcclxuICAgIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIER4aUJ1dHRvbkNvbXBvbmVudCBleHRlbmRzIER4aVRleHRFZGl0b3JCdXR0b24ge1xyXG5cclxuICAgIHByb3RlY3RlZCBnZXQgX29wdGlvblBhdGgoKSB7XHJcbiAgICAgICAgcmV0dXJuICdidXR0b25zJztcclxuICAgIH1cclxuXHJcblxyXG4gICAgY29uc3RydWN0b3IoQFNraXBTZWxmKCkgQEhvc3QoKSBwYXJlbnRPcHRpb25Ib3N0OiBOZXN0ZWRPcHRpb25Ib3N0LFxyXG4gICAgICAgICAgICBASG9zdCgpIG9wdGlvbkhvc3Q6IE5lc3RlZE9wdGlvbkhvc3QpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHBhcmVudE9wdGlvbkhvc3Quc2V0TmVzdGVkT3B0aW9uKHRoaXMpO1xyXG4gICAgICAgIG9wdGlvbkhvc3Quc2V0SG9zdCh0aGlzLCB0aGlzLl9mdWxsT3B0aW9uUGF0aC5iaW5kKHRoaXMpKTtcclxuICAgIH1cclxuXHJcblxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgRHhpQnV0dG9uQ29tcG9uZW50XHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBEeGlCdXR0b25Db21wb25lbnRcclxuICBdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRHhpQnV0dG9uTW9kdWxlIHsgfVxyXG4iXX0=