/*!
 * devextreme-angular
 * Version: 20.1.3
 * Build date: Fri Apr 24 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxiFilterBuilderField } from './base/filter-builder-field-dxi';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'devextreme-angular/core';
var DxiFieldComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DxiFieldComponent, _super);
    function DxiFieldComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiFieldComponent.prototype, "_optionPath", {
        get: function () {
            return 'fields';
        },
        enumerable: true,
        configurable: true
    });
    DxiFieldComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    DxiFieldComponent = tslib_1.__decorate([ tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
        tslib_1.__param(1, Host()),
        tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxiFieldComponent);
DxiFieldComponent.ɵfac = function DxiFieldComponent_Factory(t) { return new (t || DxiFieldComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost, 1)); };
DxiFieldComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxiFieldComponent, selectors: [["dxi-field"]], inputs: { calculateFilterExpression: "calculateFilterExpression", caption: "caption", customizeText: "customizeText", dataField: "dataField", dataType: "dataType", editorOptions: "editorOptions", editorTemplate: "editorTemplate", falseText: "falseText", filterOperations: "filterOperations", format: "format", lookup: "lookup", name: "name", trueText: "trueText", allowCrossGroupCalculation: "allowCrossGroupCalculation", allowExpandAll: "allowExpandAll", allowFiltering: "allowFiltering", allowSorting: "allowSorting", allowSortingBySummary: "allowSortingBySummary", area: "area", areaIndex: "areaIndex", calculateCustomSummary: "calculateCustomSummary", calculateSummaryValue: "calculateSummaryValue", displayFolder: "displayFolder", expanded: "expanded", filterType: "filterType", filterValues: "filterValues", groupIndex: "groupIndex", groupInterval: "groupInterval", groupName: "groupName", headerFilter: "headerFilter", isMeasure: "isMeasure", precision: "precision", runningTotal: "runningTotal", selector: "selector", showGrandTotals: "showGrandTotals", showTotals: "showTotals", showValues: "showValues", sortBy: "sortBy", sortBySummaryField: "sortBySummaryField", sortBySummaryPath: "sortBySummaryPath", sortingMethod: "sortingMethod", sortOrder: "sortOrder", summaryDisplayMode: "summaryDisplayMode", summaryType: "summaryType", visible: "visible", width: "width", wordWrapEnabled: "wordWrapEnabled" }, features: [ɵngcc0.ɵɵProvidersFeature([NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiFieldComponent_Template(rf, ctx) { }, styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiFieldComponent, [{
        type: Component,
        args: [{
                selector: 'dxi-field',
                template: '',
                providers: [NestedOptionHost],
                inputs: [
                    'calculateFilterExpression',
                    'caption',
                    'customizeText',
                    'dataField',
                    'dataType',
                    'editorOptions',
                    'editorTemplate',
                    'falseText',
                    'filterOperations',
                    'format',
                    'lookup',
                    'name',
                    'trueText',
                    'allowCrossGroupCalculation',
                    'allowExpandAll',
                    'allowFiltering',
                    'allowSorting',
                    'allowSortingBySummary',
                    'area',
                    'areaIndex',
                    'calculateCustomSummary',
                    'calculateSummaryValue',
                    'displayFolder',
                    'expanded',
                    'filterType',
                    'filterValues',
                    'groupIndex',
                    'groupInterval',
                    'groupName',
                    'headerFilter',
                    'isMeasure',
                    'precision',
                    'runningTotal',
                    'selector',
                    'showGrandTotals',
                    'showTotals',
                    'showValues',
                    'sortBy',
                    'sortBySummaryField',
                    'sortBySummaryPath',
                    'sortingMethod',
                    'sortOrder',
                    'summaryDisplayMode',
                    'summaryType',
                    'visible',
                    'width',
                    'wordWrapEnabled'
                ],
                styles: ['']
            }]
    }], function () { return [{ type: ɵngcc1.NestedOptionHost, decorators: [{
                type: SkipSelf
            }, {
                type: Host
            }] }, { type: ɵngcc1.NestedOptionHost, decorators: [{
                type: Host
            }] }]; }, null); })();
    return DxiFieldComponent;
}(DxiFilterBuilderField));
export { DxiFieldComponent };
var DxiFieldModule = /** @class */ (function () {
    function DxiFieldModule() {
    }
DxiFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxiFieldModule });
DxiFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxiFieldModule_Factory(t) { return new (t || DxiFieldModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxiFieldModule, { declarations: [DxiFieldComponent], exports: [DxiFieldComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiFieldModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DxiFieldComponent
                ],
                exports: [
                    DxiFieldComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxiFieldModule;
}());
export { DxiFieldModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmllbGQtZHhpLmpzIiwic291cmNlcyI6WyJuZzovZGV2ZXh0cmVtZS1hbmd1bGFyL3VpL25lc3RlZC9maWVsZC1keGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0dBV0c7O0FBRUgsb0NBQW9DO0FBRXBDLGlEQUFpRDtBQUVqRCxPQUFPLEVBQ0gsU0FBUyxFQUNULFFBQVEsRUFDUixJQUFJLEVBQ0osUUFBUSxFQUNYLE1BQU0sZUFBZSxDQUFDO0FBTXZCLE9BQU8sRUFDSCxnQkFBZ0IsR0FDbkIsTUFBTSx5QkFBeUIsQ0FBQztBQUNqQyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQzs7O0FBMER4RTtJQUF1Qyw2Q0FBcUI7SUFPeEQsMkJBQWdDLGdCQUFrQyxFQUNsRCxVQUE0QjtRQUQ1QyxZQUVJLGlCQUFPLFNBR1Y7UUFGRyxnQkFBZ0IsQ0FBQyxlQUFlLENBQUMsS0FBSSxDQUFDLENBQUM7UUFDdkMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxLQUFJLEVBQUUsS0FBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsS0FBSSxDQUFDLENBQUMsQ0FBQzs7SUFDOUQsQ0FBQztJQVZELHNCQUFjLDBDQUFXO2FBQXpCO1lBQ0ksT0FBTyxRQUFRLENBQUM7UUFDcEIsQ0FBQzs7O09BQUE7O2dCQUdpRCxnQkFBZ0IsdUJBQXJELFFBQVEsWUFBSSxJQUFJO2dCQUNELGdCQUFnQix1QkFBbkMsSUFBSTs7SUFSSixpQkFBaUIsdUJBQXVCLFNBdkRwRCxTQUFTLENBQUMsY0FDUCxRQUFRLEVBQUUsV0FBVyx0REFzRGpCLENBT1MsbUJBQUEsUUFBUSxFQUFFLENBQUEsRUFBRSxtQkFBQSxJQUFJLEVBQUUsQ0FBQTtPQTVEL0IsUUFBUSxFQUFFLEVBQUUsY0FFWix6QkEyRFMsbUJBQUEsSUFBSSxFQUFFLENBQUE7TUEzRE4sRUFBRSxDQUFDLGdCQUFnQixDQUFDLGNBQzdCLE1BQU0sRUFBRSxrQkFDSixqQkF3RDhDLGdCQUFnQjswQkF4RG5DLGRBeURILGdCQUFnQjthQXhEeEMsU0FBUyxmQWdESixpQkFBaUIsQ0FlN0I7YUE5RE8sZUFBZSxrQkFDZixXQUFXLGtCQUNYLFVBQVUsa0JBQ1YsZUFBZSxrQkFDZixnQkFBZ0Isa0JBQ2hCLFdBQVcsa0JBQ1g7SUFBa0Isa0JBQ2xCLFFBQVEsa0JBQ1IsUUFBUSxrQkFDUixNQUFNLGtCQUNOLFVBQVUsa0JBQ1YsNEJBQTRCLGtCQUM1QixnQkFBZ0Isa0JBQ2hCLGdCQUFnQixrQkFDaEIsY0FBYyxrQkFDZCx1QkFBdUIsa0JBQ3ZCLE1BQU0sa0JBQ04sV0FBVyxrQkFDWCx3QkFBd0Isa0JBQ3hCLHVCQUF1QixrQkFDdkIsZUFBZSxrQkFDZixVQUFVLGtCQUNWLFlBQVksa0JBQ1osY0FBYyxrQkFDZCxZQUFZLGtCQUNaLGVBQWUsa0JBQ2YsV0FBVyxrQkFDWCxjQUFjLGtCQUNkLFdBQVcsa0JBQ1gsV0FBVyxrQkFDWCxjQUFjLGtCQUNkLFVBQVUsa0JBQ1YsaUJBQWlCLGtCQUNqQixZQUFZLGtCQUNaLFlBQVksa0JBQ1osUUFBUSxrQkFDUixvQkFBb0Isa0JBQ3BCLG1CQUFtQixrQkFDbkIsZUFBZSxrQkFDZixXQUFXLGtCQUNYLG9CQUFvQixrQkFDcEIsYUFBYSxrQkFDYixTQUFTLGtCQUNULE9BQU8sa0JBQ1AsaUJBQWlCLGNBQ3BCLHVCQWxEUSxFQUFFLFdBbURkLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0NBaUJGO0lBREEsd0JBQUM7Q0FBQSxBQWZELENBQXVDLHFCQUFxQixHQWUzRDtTQWZZLGlCQUFpQjtBQXlCOUI7SUFBQTtJQUE4QixDQUFDO0lBQWxCLGNBQWMsZ0NBUjFCLFFBQVEsQ0FBQztBQUNSLFlBQVksRUFBRSxrQkFDWixpQkFBaUIsY0FDbEIsY0FDRCxPQUFPLEVBQUUsa0JBQ1AsaUJBQWlCLGNBQ2xCO1VBQ0YsQ0FBQyxRQUNXLGNBQWMsQ0FBSTs7Ozs7Ozs7Ozs7Z0RBQy9CO0lBRDhCLHFCQUFDO0NBQUEsQUFBL0IsSUFBK0I7U0FBbEIsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogZGV2ZXh0cmVtZS1hbmd1bGFyXG4gKiBWZXJzaW9uOiAyMC4xLjNcbiAqIEJ1aWxkIGRhdGU6IEZyaSBBcHIgMjQgMjAyMFxuICpcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjAgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBtYXkgYmUgbW9kaWZpZWQgYW5kIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtc1xuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vRGV2RXhwcmVzcy9kZXZleHRyZW1lLWFuZ3VsYXJcbiAqL1xuXG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtbGluZS1sZW5ndGggKi9cclxuXHJcbi8qIHRzbGludDpkaXNhYmxlOnVzZS1pbnB1dC1wcm9wZXJ0eS1kZWNvcmF0b3IgKi9cclxuXHJcbmltcG9ydCB7XHJcbiAgICBDb21wb25lbnQsXHJcbiAgICBOZ01vZHVsZSxcclxuICAgIEhvc3QsXHJcbiAgICBTa2lwU2VsZlxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuXHJcblxyXG5cclxuXHJcbmltcG9ydCB7XHJcbiAgICBOZXN0ZWRPcHRpb25Ib3N0LFxyXG59IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRHhpRmlsdGVyQnVpbGRlckZpZWxkIH0gZnJvbSAnLi9iYXNlL2ZpbHRlci1idWlsZGVyLWZpZWxkLWR4aSc7XHJcblxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2R4aS1maWVsZCcsXHJcbiAgICB0ZW1wbGF0ZTogJycsXHJcbiAgICBzdHlsZXM6IFsnJ10sXHJcbiAgICBwcm92aWRlcnM6IFtOZXN0ZWRPcHRpb25Ib3N0XSxcclxuICAgIGlucHV0czogW1xyXG4gICAgICAgICdjYWxjdWxhdGVGaWx0ZXJFeHByZXNzaW9uJyxcclxuICAgICAgICAnY2FwdGlvbicsXHJcbiAgICAgICAgJ2N1c3RvbWl6ZVRleHQnLFxyXG4gICAgICAgICdkYXRhRmllbGQnLFxyXG4gICAgICAgICdkYXRhVHlwZScsXHJcbiAgICAgICAgJ2VkaXRvck9wdGlvbnMnLFxyXG4gICAgICAgICdlZGl0b3JUZW1wbGF0ZScsXHJcbiAgICAgICAgJ2ZhbHNlVGV4dCcsXHJcbiAgICAgICAgJ2ZpbHRlck9wZXJhdGlvbnMnLFxyXG4gICAgICAgICdmb3JtYXQnLFxyXG4gICAgICAgICdsb29rdXAnLFxyXG4gICAgICAgICduYW1lJyxcclxuICAgICAgICAndHJ1ZVRleHQnLFxyXG4gICAgICAgICdhbGxvd0Nyb3NzR3JvdXBDYWxjdWxhdGlvbicsXHJcbiAgICAgICAgJ2FsbG93RXhwYW5kQWxsJyxcclxuICAgICAgICAnYWxsb3dGaWx0ZXJpbmcnLFxyXG4gICAgICAgICdhbGxvd1NvcnRpbmcnLFxyXG4gICAgICAgICdhbGxvd1NvcnRpbmdCeVN1bW1hcnknLFxyXG4gICAgICAgICdhcmVhJyxcclxuICAgICAgICAnYXJlYUluZGV4JyxcclxuICAgICAgICAnY2FsY3VsYXRlQ3VzdG9tU3VtbWFyeScsXHJcbiAgICAgICAgJ2NhbGN1bGF0ZVN1bW1hcnlWYWx1ZScsXHJcbiAgICAgICAgJ2Rpc3BsYXlGb2xkZXInLFxyXG4gICAgICAgICdleHBhbmRlZCcsXHJcbiAgICAgICAgJ2ZpbHRlclR5cGUnLFxyXG4gICAgICAgICdmaWx0ZXJWYWx1ZXMnLFxyXG4gICAgICAgICdncm91cEluZGV4JyxcclxuICAgICAgICAnZ3JvdXBJbnRlcnZhbCcsXHJcbiAgICAgICAgJ2dyb3VwTmFtZScsXHJcbiAgICAgICAgJ2hlYWRlckZpbHRlcicsXHJcbiAgICAgICAgJ2lzTWVhc3VyZScsXHJcbiAgICAgICAgJ3ByZWNpc2lvbicsXHJcbiAgICAgICAgJ3J1bm5pbmdUb3RhbCcsXHJcbiAgICAgICAgJ3NlbGVjdG9yJyxcclxuICAgICAgICAnc2hvd0dyYW5kVG90YWxzJyxcclxuICAgICAgICAnc2hvd1RvdGFscycsXHJcbiAgICAgICAgJ3Nob3dWYWx1ZXMnLFxyXG4gICAgICAgICdzb3J0QnknLFxyXG4gICAgICAgICdzb3J0QnlTdW1tYXJ5RmllbGQnLFxyXG4gICAgICAgICdzb3J0QnlTdW1tYXJ5UGF0aCcsXHJcbiAgICAgICAgJ3NvcnRpbmdNZXRob2QnLFxyXG4gICAgICAgICdzb3J0T3JkZXInLFxyXG4gICAgICAgICdzdW1tYXJ5RGlzcGxheU1vZGUnLFxyXG4gICAgICAgICdzdW1tYXJ5VHlwZScsXHJcbiAgICAgICAgJ3Zpc2libGUnLFxyXG4gICAgICAgICd3aWR0aCcsXHJcbiAgICAgICAgJ3dvcmRXcmFwRW5hYmxlZCdcclxuICAgIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIER4aUZpZWxkQ29tcG9uZW50IGV4dGVuZHMgRHhpRmlsdGVyQnVpbGRlckZpZWxkIHtcclxuXHJcbiAgICBwcm90ZWN0ZWQgZ2V0IF9vcHRpb25QYXRoKCkge1xyXG4gICAgICAgIHJldHVybiAnZmllbGRzJztcclxuICAgIH1cclxuXHJcblxyXG4gICAgY29uc3RydWN0b3IoQFNraXBTZWxmKCkgQEhvc3QoKSBwYXJlbnRPcHRpb25Ib3N0OiBOZXN0ZWRPcHRpb25Ib3N0LFxyXG4gICAgICAgICAgICBASG9zdCgpIG9wdGlvbkhvc3Q6IE5lc3RlZE9wdGlvbkhvc3QpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHBhcmVudE9wdGlvbkhvc3Quc2V0TmVzdGVkT3B0aW9uKHRoaXMpO1xyXG4gICAgICAgIG9wdGlvbkhvc3Quc2V0SG9zdCh0aGlzLCB0aGlzLl9mdWxsT3B0aW9uUGF0aC5iaW5kKHRoaXMpKTtcclxuICAgIH1cclxuXHJcblxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgRHhpRmllbGRDb21wb25lbnRcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIER4aUZpZWxkQ29tcG9uZW50XHJcbiAgXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIER4aUZpZWxkTW9kdWxlIHsgfVxyXG4iXX0=