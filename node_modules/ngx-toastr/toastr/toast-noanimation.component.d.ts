import { ModuleWithProviders } from '@angular/core';
import { ApplicationRef, OnDestroy } from '@angular/core';
import { GlobalConfig, IndividualConfig, ToastPackage } from './toastr-config';
import { ToastrService } from './toastr.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare class ToastNoAnimation implements OnDestroy {
    protected toastrService: ToastrService;
    toastPackage: ToastPackage;
    protected appRef: ApplicationRef;
    message?: string | null;
    title?: string;
    options: IndividualConfig;
    duplicatesCount: number;
    originalTimeout: number;
    /** width of progress bar */
    width: number;
    /** a combination of toast type and options.toastClass */
    toastClasses: string;
    /** hides component when waiting to be displayed */
    get displayStyle(): string;
    /** controls animation */
    state: string;
    private timeout;
    private intervalId;
    private hideTime;
    private sub;
    private sub1;
    private sub2;
    private sub3;
    constructor(toastrService: ToastrService, toastPackage: ToastPackage, appRef: ApplicationRef);
    ngOnDestroy(): void;
    /**
     * activates toast and sets timeout
     */
    activateToast(): void;
    /**
     * updates progress bar width
     */
    updateProgress(): void;
    resetTimeout(): void;
    /**
     * tells toastrService to remove this toast after animation time
     */
    remove(): void;
    tapToast(): void;
    stickAround(): void;
    delayedHideToast(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ToastNoAnimation>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ToastNoAnimation, "[toast-component]", never, {}, {}, never>;
}
export declare const DefaultNoAnimationsGlobalConfig: GlobalConfig;
export declare class ToastNoAnimationModule {
    static forRoot(config?: Partial<GlobalConfig>): ModuleWithProviders<ToastNoAnimationModule>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ToastNoAnimationModule, [typeof ToastNoAnimation], [typeof ɵngcc1.CommonModule], [typeof ToastNoAnimation]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ToastNoAnimationModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3Qtbm9hbmltYXRpb24uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRvYXN0LW5vYW5pbWF0aW9uLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFJQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEwQ0E7Ozs7OztBQUlBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBBcHBsaWNhdGlvblJlZiwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEdsb2JhbENvbmZpZywgSW5kaXZpZHVhbENvbmZpZywgVG9hc3RQYWNrYWdlIH0gZnJvbSAnLi90b2FzdHItY29uZmlnJztcclxuaW1wb3J0IHsgVG9hc3RyU2VydmljZSB9IGZyb20gJy4vdG9hc3RyLnNlcnZpY2UnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUb2FzdE5vQW5pbWF0aW9uIGltcGxlbWVudHMgT25EZXN0cm95IHtcclxuICAgIHByb3RlY3RlZCB0b2FzdHJTZXJ2aWNlOiBUb2FzdHJTZXJ2aWNlO1xyXG4gICAgdG9hc3RQYWNrYWdlOiBUb2FzdFBhY2thZ2U7XHJcbiAgICBwcm90ZWN0ZWQgYXBwUmVmOiBBcHBsaWNhdGlvblJlZjtcclxuICAgIG1lc3NhZ2U/OiBzdHJpbmcgfCBudWxsO1xyXG4gICAgdGl0bGU/OiBzdHJpbmc7XHJcbiAgICBvcHRpb25zOiBJbmRpdmlkdWFsQ29uZmlnO1xyXG4gICAgZHVwbGljYXRlc0NvdW50OiBudW1iZXI7XHJcbiAgICBvcmlnaW5hbFRpbWVvdXQ6IG51bWJlcjtcclxuICAgIC8qKiB3aWR0aCBvZiBwcm9ncmVzcyBiYXIgKi9cclxuICAgIHdpZHRoOiBudW1iZXI7XHJcbiAgICAvKiogYSBjb21iaW5hdGlvbiBvZiB0b2FzdCB0eXBlIGFuZCBvcHRpb25zLnRvYXN0Q2xhc3MgKi9cclxuICAgIHRvYXN0Q2xhc3Nlczogc3RyaW5nO1xyXG4gICAgLyoqIGhpZGVzIGNvbXBvbmVudCB3aGVuIHdhaXRpbmcgdG8gYmUgZGlzcGxheWVkICovXHJcbiAgICBnZXQgZGlzcGxheVN0eWxlKCk6IHN0cmluZztcclxuICAgIC8qKiBjb250cm9scyBhbmltYXRpb24gKi9cclxuICAgIHN0YXRlOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHRpbWVvdXQ7XHJcbiAgICBwcml2YXRlIGludGVydmFsSWQ7XHJcbiAgICBwcml2YXRlIGhpZGVUaW1lO1xyXG4gICAgcHJpdmF0ZSBzdWI7XHJcbiAgICBwcml2YXRlIHN1YjE7XHJcbiAgICBwcml2YXRlIHN1YjI7XHJcbiAgICBwcml2YXRlIHN1YjM7XHJcbiAgICBjb25zdHJ1Y3Rvcih0b2FzdHJTZXJ2aWNlOiBUb2FzdHJTZXJ2aWNlLCB0b2FzdFBhY2thZ2U6IFRvYXN0UGFja2FnZSwgYXBwUmVmOiBBcHBsaWNhdGlvblJlZik7XHJcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBhY3RpdmF0ZXMgdG9hc3QgYW5kIHNldHMgdGltZW91dFxyXG4gICAgICovXHJcbiAgICBhY3RpdmF0ZVRvYXN0KCk6IHZvaWQ7XHJcbiAgICAvKipcclxuICAgICAqIHVwZGF0ZXMgcHJvZ3Jlc3MgYmFyIHdpZHRoXHJcbiAgICAgKi9cclxuICAgIHVwZGF0ZVByb2dyZXNzKCk6IHZvaWQ7XHJcbiAgICByZXNldFRpbWVvdXQoKTogdm9pZDtcclxuICAgIC8qKlxyXG4gICAgICogdGVsbHMgdG9hc3RyU2VydmljZSB0byByZW1vdmUgdGhpcyB0b2FzdCBhZnRlciBhbmltYXRpb24gdGltZVxyXG4gICAgICovXHJcbiAgICByZW1vdmUoKTogdm9pZDtcclxuICAgIHRhcFRvYXN0KCk6IHZvaWQ7XHJcbiAgICBzdGlja0Fyb3VuZCgpOiB2b2lkO1xyXG4gICAgZGVsYXllZEhpZGVUb2FzdCgpOiB2b2lkO1xyXG59XHJcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IERlZmF1bHROb0FuaW1hdGlvbnNHbG9iYWxDb25maWc6IEdsb2JhbENvbmZpZztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVG9hc3ROb0FuaW1hdGlvbk1vZHVsZSB7XHJcbiAgICBzdGF0aWMgZm9yUm9vdChjb25maWc/OiBQYXJ0aWFsPEdsb2JhbENvbmZpZz4pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPFRvYXN0Tm9BbmltYXRpb25Nb2R1bGU+O1xyXG59XHJcbiJdfQ==