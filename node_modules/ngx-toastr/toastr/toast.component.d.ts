import { NgZone, OnDestroy } from '@angular/core';
import { IndividualConfig, ToastPackage } from './toastr-config';
import { ToastrService } from './toastr.service';
import * as ɵngcc0 from '@angular/core';
export declare class Toast implements OnDestroy {
    protected toastrService: ToastrService;
    toastPackage: ToastPackage;
    protected ngZone?: NgZone;
    message?: string | null;
    title?: string;
    options: IndividualConfig;
    duplicatesCount: number;
    originalTimeout: number;
    /** width of progress bar */
    width: number;
    /** a combination of toast type and options.toastClass */
    toastClasses: string;
    /** controls animation */
    state: {
        value: string;
        params: {
            easeTime: string | number;
            easing: string;
        };
    };
    /** hides component when waiting to be displayed */
    get displayStyle(): string;
    private timeout;
    private intervalId;
    private hideTime;
    private sub;
    private sub1;
    private sub2;
    private sub3;
    constructor(toastrService: ToastrService, toastPackage: ToastPackage, ngZone?: NgZone);
    ngOnDestroy(): void;
    /**
     * activates toast and sets timeout
     */
    activateToast(): void;
    /**
     * updates progress bar width
     */
    updateProgress(): void;
    resetTimeout(): void;
    /**
     * tells toastrService to remove this toast after animation time
     */
    remove(): void;
    tapToast(): void;
    stickAround(): void;
    delayedHideToast(): void;
    outsideTimeout(func: () => any, timeout: number): void;
    outsideInterval(func: () => any, timeout: number): void;
    private runInsideAngular;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Toast>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Toast, "[toast-component]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3QuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRvYXN0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbURBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdab25lLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSW5kaXZpZHVhbENvbmZpZywgVG9hc3RQYWNrYWdlIH0gZnJvbSAnLi90b2FzdHItY29uZmlnJztcclxuaW1wb3J0IHsgVG9hc3RyU2VydmljZSB9IGZyb20gJy4vdG9hc3RyLnNlcnZpY2UnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUb2FzdCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XHJcbiAgICBwcm90ZWN0ZWQgdG9hc3RyU2VydmljZTogVG9hc3RyU2VydmljZTtcclxuICAgIHRvYXN0UGFja2FnZTogVG9hc3RQYWNrYWdlO1xyXG4gICAgcHJvdGVjdGVkIG5nWm9uZT86IE5nWm9uZTtcclxuICAgIG1lc3NhZ2U/OiBzdHJpbmcgfCBudWxsO1xyXG4gICAgdGl0bGU/OiBzdHJpbmc7XHJcbiAgICBvcHRpb25zOiBJbmRpdmlkdWFsQ29uZmlnO1xyXG4gICAgZHVwbGljYXRlc0NvdW50OiBudW1iZXI7XHJcbiAgICBvcmlnaW5hbFRpbWVvdXQ6IG51bWJlcjtcclxuICAgIC8qKiB3aWR0aCBvZiBwcm9ncmVzcyBiYXIgKi9cclxuICAgIHdpZHRoOiBudW1iZXI7XHJcbiAgICAvKiogYSBjb21iaW5hdGlvbiBvZiB0b2FzdCB0eXBlIGFuZCBvcHRpb25zLnRvYXN0Q2xhc3MgKi9cclxuICAgIHRvYXN0Q2xhc3Nlczogc3RyaW5nO1xyXG4gICAgLyoqIGNvbnRyb2xzIGFuaW1hdGlvbiAqL1xyXG4gICAgc3RhdGU6IHtcclxuICAgICAgICB2YWx1ZTogc3RyaW5nO1xyXG4gICAgICAgIHBhcmFtczoge1xyXG4gICAgICAgICAgICBlYXNlVGltZTogc3RyaW5nIHwgbnVtYmVyO1xyXG4gICAgICAgICAgICBlYXNpbmc6IHN0cmluZztcclxuICAgICAgICB9O1xyXG4gICAgfTtcclxuICAgIC8qKiBoaWRlcyBjb21wb25lbnQgd2hlbiB3YWl0aW5nIHRvIGJlIGRpc3BsYXllZCAqL1xyXG4gICAgZ2V0IGRpc3BsYXlTdHlsZSgpOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHRpbWVvdXQ7XHJcbiAgICBwcml2YXRlIGludGVydmFsSWQ7XHJcbiAgICBwcml2YXRlIGhpZGVUaW1lO1xyXG4gICAgcHJpdmF0ZSBzdWI7XHJcbiAgICBwcml2YXRlIHN1YjE7XHJcbiAgICBwcml2YXRlIHN1YjI7XHJcbiAgICBwcml2YXRlIHN1YjM7XHJcbiAgICBjb25zdHJ1Y3Rvcih0b2FzdHJTZXJ2aWNlOiBUb2FzdHJTZXJ2aWNlLCB0b2FzdFBhY2thZ2U6IFRvYXN0UGFja2FnZSwgbmdab25lPzogTmdab25lKTtcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbiAgICAvKipcclxuICAgICAqIGFjdGl2YXRlcyB0b2FzdCBhbmQgc2V0cyB0aW1lb3V0XHJcbiAgICAgKi9cclxuICAgIGFjdGl2YXRlVG9hc3QoKTogdm9pZDtcclxuICAgIC8qKlxyXG4gICAgICogdXBkYXRlcyBwcm9ncmVzcyBiYXIgd2lkdGhcclxuICAgICAqL1xyXG4gICAgdXBkYXRlUHJvZ3Jlc3MoKTogdm9pZDtcclxuICAgIHJlc2V0VGltZW91dCgpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiB0ZWxscyB0b2FzdHJTZXJ2aWNlIHRvIHJlbW92ZSB0aGlzIHRvYXN0IGFmdGVyIGFuaW1hdGlvbiB0aW1lXHJcbiAgICAgKi9cclxuICAgIHJlbW92ZSgpOiB2b2lkO1xyXG4gICAgdGFwVG9hc3QoKTogdm9pZDtcclxuICAgIHN0aWNrQXJvdW5kKCk6IHZvaWQ7XHJcbiAgICBkZWxheWVkSGlkZVRvYXN0KCk6IHZvaWQ7XHJcbiAgICBvdXRzaWRlVGltZW91dChmdW5jOiAoKSA9PiBhbnksIHRpbWVvdXQ6IG51bWJlcik6IHZvaWQ7XHJcbiAgICBvdXRzaWRlSW50ZXJ2YWwoZnVuYzogKCkgPT4gYW55LCB0aW1lb3V0OiBudW1iZXIpOiB2b2lkO1xyXG4gICAgcHJpdmF0ZSBydW5JbnNpZGVBbmd1bGFyO1xyXG59XHJcbiJdfQ==