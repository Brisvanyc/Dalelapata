/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Pipe } from '@angular/core';
import { FlxUiDatatableService } from '../flx-ui-datatable.service';
import * as ɵngcc0 from '@angular/core';
var HasLimitText = /** @class */ (function () {
    function HasLimitText(service) {
        this.service = service;
    }
    /**
     * @param {?} array
     * @param {?} indexReached
     * @return {?}
     */
    HasLimitText.prototype.transform = /**
     * @param {?} array
     * @param {?} indexReached
     * @return {?}
     */
    function (array, indexReached) {
        var /** @type {?} */ found;
        try {
            for (var array_1 = tslib_1.__values(array), array_1_1 = array_1.next(); !array_1_1.done; array_1_1 = array_1.next()) {
                var i = array_1_1.value;
                if (i == indexReached) {
                    found = true;
                    break;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (array_1_1 && !array_1_1.done && (_a = array_1.return)) _a.call(array_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return found;
        var e_1, _a;
    };
    /** @nocollapse */
    HasLimitText.ctorParameters = function () { return [
        { type: FlxUiDatatableService }
    ]; };
HasLimitText.ɵfac = function HasLimitText_Factory(t) { return new (t || HasLimitText)(ɵngcc0.ɵɵdirectiveInject(FlxUiDatatableService)); };
HasLimitText.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "haslimittext", type: HasLimitText, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HasLimitText, [{
        type: Pipe,
        args: [{
                name: 'haslimittext'
            }]
    }], function () { return [{ type: FlxUiDatatableService }]; }, null); })();
    return HasLimitText;
}());
export { HasLimitText };
function HasLimitText_tsickle_Closure_declarations() {
    /** @type {?} */
    HasLimitText.prototype.service;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzTGltaXRUZXh0LnBpcGUuanMiLCJzb3VyY2VzIjpbIm5nOi9mbHgtdWktZGF0YXRhYmxlL2xpYi9waXBlcy9oYXNMaW1pdFRleHQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFFO0FBQ3JELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDOztBQUNwRTtJQUtJLHNCQUFtQixPQUE4QjtRQUE5QixZQUFPLEdBQVAsT0FBTyxDQUF1QjtLQUFHOzs7Ozs7SUFFcEQsZ0NBQVM7Ozs7O0lBQVQsVUFBVSxLQUFtQixFQUFDLFlBQW1CO1FBQzlDLHFCQUFJLEtBQWMsQ0FBRTs7WUFDcEIsR0FBRyxDQUFBLENBQVUsSUFBQSxVQUFBLGlCQUFBLEtBQUssQ0FBQSw0QkFBQTtnQkFBZCxJQUFJLENBQUMsa0JBQUE7Z0JBQ0wsRUFBRSxDQUFBLENBQUMsQ0FBQyxJQUFFLFlBQVksQ0FBQyxDQUFBLENBQUM7b0JBQ2YsS0FBSyxHQUFHLElBQUksQ0FBRTtvQkFDZCxLQUFLLENBQUU7aUJBQ1g7YUFDSjs7Ozs7Ozs7O1FBRUQsTUFBTSxDQUFDLEtBQUssQ0FBRTs7S0FDaEIsQ0FDTCxBQWRVOzt5QkFIVCxJQUFJLFNBQUM7R0FDRixJQUFJLEVBQUMsY0FBYyxQQUhkLHFCQUFxQjtDQUk3Qjs7Ozs7Ozs7K0VBSnlDO3VCQUQxQzs7U0FNYSxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnIDtcclxuaW1wb3J0IHsgRmx4VWlEYXRhdGFibGVTZXJ2aWNlIH0gZnJvbSAnLi4vZmx4LXVpLWRhdGF0YWJsZS5zZXJ2aWNlJztcclxuXHJcbkBQaXBlKHtcclxuICAgIG5hbWU6J2hhc2xpbWl0dGV4dCdcclxufSlcclxuZXhwb3J0IGNsYXNzIEhhc0xpbWl0VGV4dCBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm17XHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgc2VydmljZTogRmx4VWlEYXRhdGFibGVTZXJ2aWNlKXt9XHJcblxyXG4gICAgdHJhbnNmb3JtKGFycmF5OkFycmF5PG51bWJlcj4saW5kZXhSZWFjaGVkOm51bWJlcik6IGFueXtcclxuICAgICAgIGxldCBmb3VuZDogYm9vbGVhbiA7XHJcbiAgICAgICBmb3IobGV0IGkgb2YgYXJyYXkpe1xyXG4gICAgICAgICAgIGlmKGk9PWluZGV4UmVhY2hlZCl7XHJcbiAgICAgICAgICAgICAgICBmb3VuZCA9IHRydWUgO1xyXG4gICAgICAgICAgICAgICAgYnJlYWsgO1xyXG4gICAgICAgICAgIH1cclxuICAgICAgIH1cclxuXHJcbiAgICAgICByZXR1cm4gZm91bmQgO1xyXG4gICAgfVxyXG59Il19