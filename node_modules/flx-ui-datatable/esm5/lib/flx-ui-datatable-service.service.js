/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable } from '@angular/core';
import { FlxUiDatatableService } from './flx-ui-datatable.service';
import { BehaviorSubject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
var FlxUiDataTable = /** @class */ (function () {
    function FlxUiDataTable(service) {
        var _this = this;
        this.service = service;
        this.behavior = new BehaviorSubject([]);
        this.flxDatatableData = this.behavior.asObservable();
        this.service.flxData.subscribe(function (resp) {
            _this.ChangeData(resp);
        });
    }
    /**
     *
     * @param data Change table data with new data
     */
    /**
     *
     * @param {?} data Change table data with new data
     * @return {?}
     */
    FlxUiDataTable.prototype.ChangeData = /**
     *
     * @param {?} data Change table data with new data
     * @return {?}
     */
    function (data) {
        this.behavior.next(data);
    };
    /**
     * Reload data from api: void
     * @return {?}
     */
    FlxUiDataTable.prototype.reloadData = /**
     * Reload data from api: void
     * @return {?}
     */
    function () {
        this.service.loadFlxDataTableData(this.service.getDataUrl());
    };
    /**
     * @return {?}
     */
    FlxUiDataTable.prototype.abortRequest = /**
     * @return {?}
     */
    function () {
        this.service.cancelLoading();
    };
    /** @nocollapse */
    FlxUiDataTable.ctorParameters = function () { return [
        { type: FlxUiDatatableService }
    ]; };
FlxUiDataTable.ɵfac = function FlxUiDataTable_Factory(t) { return new (t || FlxUiDataTable)(ɵngcc0.ɵɵinject(FlxUiDatatableService)); };
FlxUiDataTable.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FlxUiDataTable, factory: function (t) { return FlxUiDataTable.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FlxUiDataTable, [{
        type: Injectable
    }], function () { return [{ type: FlxUiDatatableService }]; }, null); })();
    return FlxUiDataTable;
}());
export { FlxUiDataTable };
function FlxUiDataTable_tsickle_Closure_declarations() {
    /** @type {?} */
    FlxUiDataTable.prototype.behavior;
    /** @type {?} */
    FlxUiDataTable.prototype.flxDatatableData;
    /** @type {?} */
    FlxUiDataTable.prototype.service;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmx4LXVpLWRhdGF0YWJsZS1zZXJ2aWNlLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIm5nOi9mbHgtdWktZGF0YXRhYmxlL2xpYi9mbHgtdWktZGF0YXRhYmxlLXNlcnZpY2Uuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBRTtBQUMzQyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBRTtBQUNwRSxPQUFPLEVBQUUsZUFBZSxFQUFhLE1BQU0sTUFBTSxDQUFDOztBQUNsRDtJQUlJLHdCQUFvQixPQUE4QjtRQUFsRCxpQkFJQztRQUptQixZQUFPLEdBQVAsT0FBTyxDQUF1Qjt3QkFGakIsSUFBSSxlQUFlLENBQUMsRUFBRSxDQUFDO2dDQUNyQyxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksRUFBRTtRQUUzQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsVUFBQyxJQUFJO1lBQ2hDLEtBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDekIsQ0FBQyxDQUFDO0tBQ047SUFFRDs7O09BR0c7Ozs7OztJQUNILG1DQUFVOzs7OztJQUFWLFVBQVcsSUFBSTtRQUNYLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzVCOzs7OztJQUtNLG1DQUFVOzs7OztRQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFFOzs7OztJQUczRCxxQ0FBWTs7OztRQUNmLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLENBQUU7TUFFdEMsQUEzQk87OzJCQUROLFVBQVU7Z0JBRkYscUJBQXFCOzs7Ozs7K0VBQVk7eUJBRDFDOztTQUlhLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJyA7XG5pbXBvcnQgeyBGbHhVaURhdGF0YWJsZVNlcnZpY2UgfSBmcm9tICcuL2ZseC11aS1kYXRhdGFibGUuc2VydmljZScgO1xuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0LE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBGbHhVaURhdGFUYWJsZXtcbiAgICBiZWhhdmlvcjogQmVoYXZpb3JTdWJqZWN0PGFueT4gPSBuZXcgQmVoYXZpb3JTdWJqZWN0KFtdKTtcbiAgICBmbHhEYXRhdGFibGVEYXRhID0gdGhpcy5iZWhhdmlvci5hc09ic2VydmFibGUoKTtcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNlcnZpY2U6IEZseFVpRGF0YXRhYmxlU2VydmljZSl7XG4gICAgICAgIHRoaXMuc2VydmljZS5mbHhEYXRhLnN1YnNjcmliZSgocmVzcCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5DaGFuZ2VEYXRhKHJlc3ApO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBcbiAgICAgKiBAcGFyYW0gZGF0YSBDaGFuZ2UgdGFibGUgZGF0YSB3aXRoIG5ldyBkYXRhXG4gICAgICovXG4gICAgQ2hhbmdlRGF0YShkYXRhKSB7XG4gICAgICAgIHRoaXMuYmVoYXZpb3IubmV4dChkYXRhKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZWxvYWQgZGF0YSBmcm9tIGFwaTogdm9pZFxuICAgICAqL1xuICAgIHB1YmxpYyByZWxvYWREYXRhKCk6IHZvaWR7XG4gICAgICAgIHRoaXMuc2VydmljZS5sb2FkRmx4RGF0YVRhYmxlRGF0YSh0aGlzLnNlcnZpY2UuZ2V0RGF0YVVybCgpKSA7XG4gICAgfVxuXG4gICAgcHVibGljIGFib3J0UmVxdWVzdCgpe1xuICAgICAgICB0aGlzLnNlcnZpY2UuY2FuY2VsTG9hZGluZygpIDtcbiAgICB9XG59Il19