/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Pipe } from '@angular/core';
import { FlxUiDatatableService } from '../flx-ui-datatable.service';
import * as ɵngcc0 from '@angular/core';
export class ProcessedData {
    /**
     * @param {?} service
     */
    constructor(service) {
        this.service = service;
    }
    /**
     * @param {?} dataIndex
     * @return {?}
     */
    transform(dataIndex) {
        let /** @type {?} */ isProcessed = false;
        let /** @type {?} */ foundIndex = -1;
        for (let /** @type {?} */ i = 0; i < this.service.processedData.length; i++) {
            if (i == dataIndex) {
                isProcessed = true;
                foundIndex = i;
            }
        }
        if (foundIndex < 0) {
            this.service.processedData.push(dataIndex);
        }
        return isProcessed;
    }
}
ProcessedData.ɵfac = function ProcessedData_Factory(t) { return new (t || ProcessedData)(ɵngcc0.ɵɵdirectiveInject(FlxUiDatatableService)); };
ProcessedData.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "isprocessed", type: ProcessedData, pure: true });
/** @nocollapse */
ProcessedData.ctorParameters = () => [
    { type: FlxUiDatatableService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ProcessedData, [{
        type: Pipe,
        args: [{
                name: 'isprocessed'
            }]
    }], function () { return [{ type: FlxUiDatatableService }]; }, null); })();
function ProcessedData_tsickle_Closure_declarations() {
    /** @type {?} */
    ProcessedData.prototype.service;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzc2VkZGF0YS5waXBlLmpzIiwic291cmNlcyI6WyJuZzovZmx4LXVpLWRhdGF0YWJsZS9saWIvcGlwZXMvcHJvY2Vzc2VkZGF0YS5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFnQixNQUFNLGVBQWUsQ0FBRTtBQUNwRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQzs7QUFLcEUsTUFBTTs7OztJQUNGLFlBQW1CLE9BQThCO1FBQTlCLFlBQU8sR0FBUCxPQUFPLENBQXVCO0tBRWhEOzs7OztJQUVELFNBQVMsQ0FBQyxTQUFnQjtRQUN0QixxQkFBSSxXQUFXLEdBQVksS0FBSyxDQUFFO1FBQ2xDLHFCQUFJLFVBQVUsR0FBVyxDQUFDLENBQUMsQ0FBRTtRQUM3QixHQUFHLENBQUEsQ0FBQyxxQkFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUMsQ0FBQyxFQUFFLEVBQUMsQ0FBQztZQUNqRCxFQUFFLENBQUEsQ0FBQyxDQUFDLElBQUUsU0FBUyxDQUFDLENBQUEsQ0FBQztnQkFDYixXQUFXLEdBQUcsSUFBSSxDQUFFO2dCQUNwQixVQUFVLEdBQUcsQ0FBQyxDQUFFO2FBQ25CO1NBQ0o7UUFFRCxFQUFFLENBQUEsQ0FBQyxVQUFVLEdBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQztZQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBRTtTQUMvQztRQUVELE1BQU0sQ0FBQyxXQUFXLENBQUU7S0FDdkI7OztDQUNKLDBDQXhCQSxJQUFJLFNBQUMsa0JBQ0YsSUFBSSxFQUFDLGFBQWEsT0FFaEI7TUFETDs7WUFKUSxxQkFBcUI7Ozs7Ozs7K0VBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJyA7XHJcbmltcG9ydCB7IEZseFVpRGF0YXRhYmxlU2VydmljZSB9IGZyb20gJy4uL2ZseC11aS1kYXRhdGFibGUuc2VydmljZSc7XHJcblxyXG5AUGlwZSh7XHJcbiAgICBuYW1lOidpc3Byb2Nlc3NlZCdcclxufSlcclxuZXhwb3J0IGNsYXNzIFByb2Nlc3NlZERhdGEgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3Jte1xyXG4gICAgY29uc3RydWN0b3IocHVibGljIHNlcnZpY2U6IEZseFVpRGF0YXRhYmxlU2VydmljZSl7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHRyYW5zZm9ybShkYXRhSW5kZXg6bnVtYmVyKTogYm9vbGVhbntcclxuICAgICAgICBsZXQgaXNQcm9jZXNzZWQ6IGJvb2xlYW4gPSBmYWxzZSA7XHJcbiAgICAgICAgbGV0IGZvdW5kSW5kZXg6IG51bWJlciA9IC0xIDtcclxuICAgICAgICBmb3IobGV0IGk9MDtpPHRoaXMuc2VydmljZS5wcm9jZXNzZWREYXRhLmxlbmd0aDtpKyspe1xyXG4gICAgICAgICAgICBpZihpPT1kYXRhSW5kZXgpe1xyXG4gICAgICAgICAgICAgICAgaXNQcm9jZXNzZWQgPSB0cnVlIDtcclxuICAgICAgICAgICAgICAgIGZvdW5kSW5kZXggPSBpIDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYoZm91bmRJbmRleDwwKXsgICAgICAgICAgICBcclxuICAgICAgICAgICAgdGhpcy5zZXJ2aWNlLnByb2Nlc3NlZERhdGEucHVzaChkYXRhSW5kZXgpIDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBpc1Byb2Nlc3NlZCA7XHJcbiAgICB9XHJcbn0iXX0=