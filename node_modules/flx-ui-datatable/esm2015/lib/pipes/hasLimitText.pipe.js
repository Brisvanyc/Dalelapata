/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Pipe } from '@angular/core';
import { FlxUiDatatableService } from '../flx-ui-datatable.service';
import * as ɵngcc0 from '@angular/core';
export class HasLimitText {
    /**
     * @param {?} service
     */
    constructor(service) {
        this.service = service;
    }
    /**
     * @param {?} array
     * @param {?} indexReached
     * @return {?}
     */
    transform(array, indexReached) {
        let /** @type {?} */ found;
        for (let /** @type {?} */ i of array) {
            if (i == indexReached) {
                found = true;
                break;
            }
        }
        return found;
    }
}
HasLimitText.ɵfac = function HasLimitText_Factory(t) { return new (t || HasLimitText)(ɵngcc0.ɵɵdirectiveInject(FlxUiDatatableService)); };
HasLimitText.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "haslimittext", type: HasLimitText, pure: true });
/** @nocollapse */
HasLimitText.ctorParameters = () => [
    { type: FlxUiDatatableService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HasLimitText, [{
        type: Pipe,
        args: [{
                name: 'haslimittext'
            }]
    }], function () { return [{ type: FlxUiDatatableService }]; }, null); })();
function HasLimitText_tsickle_Closure_declarations() {
    /** @type {?} */
    HasLimitText.prototype.service;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzTGltaXRUZXh0LnBpcGUuanMiLCJzb3VyY2VzIjpbIm5nOi9mbHgtdWktZGF0YXRhYmxlL2xpYi9waXBlcy9oYXNMaW1pdFRleHQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUU7QUFDckQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7O0FBS3BFLE1BQU07Ozs7SUFDRixZQUFtQixPQUE4QjtRQUE5QixZQUFPLEdBQVAsT0FBTyxDQUF1QjtLQUFHOzs7Ozs7SUFFcEQsU0FBUyxDQUFDLEtBQW1CLEVBQUMsWUFBbUI7UUFDOUMscUJBQUksS0FBYyxDQUFFO1FBQ3BCLEdBQUcsQ0FBQSxDQUFDLHFCQUFJLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQSxDQUFDO1lBQ2hCLEVBQUUsQ0FBQSxDQUFDLENBQUMsSUFBRSxZQUFZLENBQUMsQ0FBQSxDQUFDO2dCQUNmLEtBQUssR0FBRyxJQUFJLENBQUU7Z0JBQ2QsS0FBSyxDQUFFO2FBQ1g7U0FDSjtRQUVELE1BQU0sQ0FBQyxLQUFLLENBQUU7S0FDaEI7OztDQUNKLHlDQWpCQSxJQUFJLFNBQUMsa0JBQ0YsSUFBSSxFQUFDLGNBQWMsTUFFakI7T0FETDs7WUFKUSxxQkFBcUI7Ozs7Ozs7K0VBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZScgO1xyXG5pbXBvcnQgeyBGbHhVaURhdGF0YWJsZVNlcnZpY2UgfSBmcm9tICcuLi9mbHgtdWktZGF0YXRhYmxlLnNlcnZpY2UnO1xyXG5cclxuQFBpcGUoe1xyXG4gICAgbmFtZTonaGFzbGltaXR0ZXh0J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgSGFzTGltaXRUZXh0IGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybXtcclxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBzZXJ2aWNlOiBGbHhVaURhdGF0YWJsZVNlcnZpY2Upe31cclxuXHJcbiAgICB0cmFuc2Zvcm0oYXJyYXk6QXJyYXk8bnVtYmVyPixpbmRleFJlYWNoZWQ6bnVtYmVyKTogYW55e1xyXG4gICAgICAgbGV0IGZvdW5kOiBib29sZWFuIDtcclxuICAgICAgIGZvcihsZXQgaSBvZiBhcnJheSl7XHJcbiAgICAgICAgICAgaWYoaT09aW5kZXhSZWFjaGVkKXtcclxuICAgICAgICAgICAgICAgIGZvdW5kID0gdHJ1ZSA7XHJcbiAgICAgICAgICAgICAgICBicmVhayA7XHJcbiAgICAgICAgICAgfVxyXG4gICAgICAgfVxyXG5cclxuICAgICAgIHJldHVybiBmb3VuZCA7XHJcbiAgICB9XHJcbn0iXX0=