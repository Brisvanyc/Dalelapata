/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Pipe } from '@angular/core';
import { FlxUiDatatableService } from '../flx-ui-datatable.service';
import * as ɵngcc0 from '@angular/core';
export class LimitText {
    /**
     * @param {?} service
     */
    constructor(service) {
        this.service = service;
    }
    /**
     * @param {?} mainpulationConfig
     * @param {?} text
     * @return {?}
     */
    transform(mainpulationConfig, text) {
        let /** @type {?} */ from = (mainpulationConfig.hasOwnProperty("from")) ? mainpulationConfig['from'] : 0;
        let /** @type {?} */ to = (mainpulationConfig.hasOwnProperty("to")) ? mainpulationConfig["to"] : text.length;
        let /** @type {?} */ appendDots = (mainpulationConfig.hasOwnProperty("appendDots")) ? mainpulationConfig["appendDots"] : "";
        let /** @type {?} */ txt = "";
        if (text.length > to) {
            txt = text.substring(from, to) + appendDots;
        }
        else {
            txt = text;
        }
        return txt;
    }
}
LimitText.ɵfac = function LimitText_Factory(t) { return new (t || LimitText)(ɵngcc0.ɵɵdirectiveInject(FlxUiDatatableService)); };
LimitText.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "limittext", type: LimitText, pure: true });
/** @nocollapse */
LimitText.ctorParameters = () => [
    { type: FlxUiDatatableService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LimitText, [{
        type: Pipe,
        args: [{
                name: 'limittext'
            }]
    }], function () { return [{ type: FlxUiDatatableService }]; }, null); })();
function LimitText_tsickle_Closure_declarations() {
    /** @type {?} */
    LimitText.prototype.service;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGltaXRUZXh0LnBpcGUuanMiLCJzb3VyY2VzIjpbIm5nOi9mbHgtdWktZGF0YXRhYmxlL2xpYi9waXBlcy9saW1pdFRleHQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBZ0IsTUFBTSxlQUFlLENBQUU7QUFDcEQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7O0FBSXBFLE1BQU07Ozs7SUFDRixZQUFtQixPQUE2QjtRQUE3QixZQUFPLEdBQVAsT0FBTyxDQUFzQjtLQUUvQzs7Ozs7O0lBRUQsU0FBUyxDQUFDLGtCQUF5QixFQUFDLElBQVc7UUFDM0MscUJBQUksSUFBSSxHQUFHLENBQUMsa0JBQWtCLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUU7UUFDekYscUJBQUksRUFBRSxHQUFHLENBQUMsa0JBQWtCLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFFO1FBQzdGLHFCQUFJLFVBQVUsR0FBRyxDQUFDLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFFO1FBQzVHLHFCQUFJLEdBQUcsR0FBVSxFQUFFLENBQUU7UUFDckIsRUFBRSxDQUFBLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBQyxFQUFFLENBQUMsQ0FBQSxDQUFDO1lBQ2YsR0FBRyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFDLEVBQUUsQ0FBQyxHQUFFLFVBQVUsQ0FBRTtTQUM5QztRQUFBLElBQUksQ0FBQSxDQUFDO1lBQ0YsR0FBRyxHQUFHLElBQUksQ0FBRTtTQUNmO1FBRUQsTUFBTSxDQUFDLEdBQUcsQ0FBRTtLQUNmOzs7Q0FDSixzQ0FyQkEsSUFBSSxTQUFDLGtCQUNGLElBQUksRUFBQyxXQUFXLEdBRWQ7VUFETDs7WUFIUSxxQkFBcUI7Ozs7Ozs7K0VBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJyA7XHJcbmltcG9ydCB7IEZseFVpRGF0YXRhYmxlU2VydmljZSB9IGZyb20gJy4uL2ZseC11aS1kYXRhdGFibGUuc2VydmljZSc7XHJcbkBQaXBlKHtcclxuICAgIG5hbWU6J2xpbWl0dGV4dCdcclxufSlcclxuZXhwb3J0IGNsYXNzIExpbWl0VGV4dCBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm17XHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgc2VydmljZTpGbHhVaURhdGF0YWJsZVNlcnZpY2Upe1xyXG5cclxuICAgIH1cclxuXHJcbiAgICB0cmFuc2Zvcm0obWFpbnB1bGF0aW9uQ29uZmlnOk9iamVjdCx0ZXh0OnN0cmluZyk6c3RyaW5ne1xyXG4gICAgICAgIGxldCBmcm9tID0gKG1haW5wdWxhdGlvbkNvbmZpZy5oYXNPd25Qcm9wZXJ0eShcImZyb21cIikpID8gbWFpbnB1bGF0aW9uQ29uZmlnWydmcm9tJ10gOiAwIDtcclxuICAgICAgICBsZXQgdG8gPSAobWFpbnB1bGF0aW9uQ29uZmlnLmhhc093blByb3BlcnR5KFwidG9cIikpID8gbWFpbnB1bGF0aW9uQ29uZmlnW1widG9cIl0gOiB0ZXh0Lmxlbmd0aCA7XHJcbiAgICAgICAgbGV0IGFwcGVuZERvdHMgPSAobWFpbnB1bGF0aW9uQ29uZmlnLmhhc093blByb3BlcnR5KFwiYXBwZW5kRG90c1wiKSkgPyBtYWlucHVsYXRpb25Db25maWdbXCJhcHBlbmREb3RzXCJdIDogXCJcIiA7XHJcbiAgICAgICAgbGV0IHR4dDogc3RyaW5nID1cIlwiIDtcclxuICAgICAgICBpZih0ZXh0Lmxlbmd0aD50byl7XHJcbiAgICAgICAgICAgIHR4dCA9IHRleHQuc3Vic3RyaW5nKGZyb20sdG8pKyBhcHBlbmREb3RzIDtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgdHh0ID0gdGV4dCA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gdHh0IDtcclxuICAgIH1cclxufSJdfQ==