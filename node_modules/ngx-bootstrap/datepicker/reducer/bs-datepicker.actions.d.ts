import { TimeUnit } from 'ngx-bootstrap/chronos';
import { Action } from 'ngx-bootstrap/mini-ngrx';
import { BsDatepickerViewMode, BsViewNavigationEvent, CellHoverEvent, DatepickerRenderOptions, DatepickerDateCustomClasses } from '../models';
import * as ɵngcc0 from '@angular/core';
export declare class BsDatepickerActions {
    static readonly CALCULATE = "[datepicker] calculate dates matrix";
    static readonly FORMAT = "[datepicker] format datepicker values";
    static readonly FLAG = "[datepicker] set flags";
    static readonly SELECT = "[datepicker] select date";
    static readonly NAVIGATE_OFFSET = "[datepicker] shift view date";
    static readonly NAVIGATE_TO = "[datepicker] change view date";
    static readonly SET_OPTIONS = "[datepicker] update render options";
    static readonly HOVER = "[datepicker] hover date";
    static readonly CHANGE_VIEWMODE = "[datepicker] switch view mode";
    static readonly SET_MIN_DATE = "[datepicker] set min date";
    static readonly SET_MAX_DATE = "[datepicker] set max date";
    static readonly SET_DAYSDISABLED = "[datepicker] set days disabled";
    static readonly SET_DATESDISABLED = "[datepicker] set dates disabled";
    static readonly SET_IS_DISABLED = "[datepicker] set is disabled";
    static readonly SET_DATE_CUSTOM_CLASSES = "[datepicker] set date custom classes";
    static readonly SET_LOCALE = "[datepicker] set datepicker locale";
    static readonly SELECT_RANGE = "[daterangepicker] select dates range";
    calculate(): Action;
    format(): Action;
    flag(): Action;
    select(date: Date): Action;
    changeViewMode(event: BsDatepickerViewMode): Action;
    navigateTo(event: BsViewNavigationEvent): Action;
    navigateStep(step: TimeUnit): Action;
    setOptions(options: DatepickerRenderOptions): Action;
    selectRange(value: Date[]): Action;
    hoverDay(event: CellHoverEvent): Action;
    minDate(date: Date): Action;
    maxDate(date: Date): Action;
    daysDisabled(days: number[]): Action;
    datesDisabled(dates: Date[]): Action;
    isDisabled(value: boolean): Action;
    setDateCustomClasses(value: DatepickerDateCustomClasses[]): Action;
    setLocale(locale: string): Action;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BsDatepickerActions>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<BsDatepickerActions>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZGF0ZXBpY2tlci5hY3Rpb25zLmQudHMiLCJzb3VyY2VzIjpbImJzLWRhdGVwaWNrZXIuYWN0aW9ucy5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUaW1lVW5pdCB9IGZyb20gJ25neC1ib290c3RyYXAvY2hyb25vcyc7XHJcbmltcG9ydCB7IEFjdGlvbiB9IGZyb20gJ25neC1ib290c3RyYXAvbWluaS1uZ3J4JztcclxuaW1wb3J0IHsgQnNEYXRlcGlja2VyVmlld01vZGUsIEJzVmlld05hdmlnYXRpb25FdmVudCwgQ2VsbEhvdmVyRXZlbnQsIERhdGVwaWNrZXJSZW5kZXJPcHRpb25zLCBEYXRlcGlja2VyRGF0ZUN1c3RvbUNsYXNzZXMgfSBmcm9tICcuLi9tb2RlbHMnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBCc0RhdGVwaWNrZXJBY3Rpb25zIHtcclxuICAgIHN0YXRpYyByZWFkb25seSBDQUxDVUxBVEUgPSBcIltkYXRlcGlja2VyXSBjYWxjdWxhdGUgZGF0ZXMgbWF0cml4XCI7XHJcbiAgICBzdGF0aWMgcmVhZG9ubHkgRk9STUFUID0gXCJbZGF0ZXBpY2tlcl0gZm9ybWF0IGRhdGVwaWNrZXIgdmFsdWVzXCI7XHJcbiAgICBzdGF0aWMgcmVhZG9ubHkgRkxBRyA9IFwiW2RhdGVwaWNrZXJdIHNldCBmbGFnc1wiO1xyXG4gICAgc3RhdGljIHJlYWRvbmx5IFNFTEVDVCA9IFwiW2RhdGVwaWNrZXJdIHNlbGVjdCBkYXRlXCI7XHJcbiAgICBzdGF0aWMgcmVhZG9ubHkgTkFWSUdBVEVfT0ZGU0VUID0gXCJbZGF0ZXBpY2tlcl0gc2hpZnQgdmlldyBkYXRlXCI7XHJcbiAgICBzdGF0aWMgcmVhZG9ubHkgTkFWSUdBVEVfVE8gPSBcIltkYXRlcGlja2VyXSBjaGFuZ2UgdmlldyBkYXRlXCI7XHJcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX09QVElPTlMgPSBcIltkYXRlcGlja2VyXSB1cGRhdGUgcmVuZGVyIG9wdGlvbnNcIjtcclxuICAgIHN0YXRpYyByZWFkb25seSBIT1ZFUiA9IFwiW2RhdGVwaWNrZXJdIGhvdmVyIGRhdGVcIjtcclxuICAgIHN0YXRpYyByZWFkb25seSBDSEFOR0VfVklFV01PREUgPSBcIltkYXRlcGlja2VyXSBzd2l0Y2ggdmlldyBtb2RlXCI7XHJcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX01JTl9EQVRFID0gXCJbZGF0ZXBpY2tlcl0gc2V0IG1pbiBkYXRlXCI7XHJcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX01BWF9EQVRFID0gXCJbZGF0ZXBpY2tlcl0gc2V0IG1heCBkYXRlXCI7XHJcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX0RBWVNESVNBQkxFRCA9IFwiW2RhdGVwaWNrZXJdIHNldCBkYXlzIGRpc2FibGVkXCI7XHJcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX0RBVEVTRElTQUJMRUQgPSBcIltkYXRlcGlja2VyXSBzZXQgZGF0ZXMgZGlzYWJsZWRcIjtcclxuICAgIHN0YXRpYyByZWFkb25seSBTRVRfSVNfRElTQUJMRUQgPSBcIltkYXRlcGlja2VyXSBzZXQgaXMgZGlzYWJsZWRcIjtcclxuICAgIHN0YXRpYyByZWFkb25seSBTRVRfREFURV9DVVNUT01fQ0xBU1NFUyA9IFwiW2RhdGVwaWNrZXJdIHNldCBkYXRlIGN1c3RvbSBjbGFzc2VzXCI7XHJcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX0xPQ0FMRSA9IFwiW2RhdGVwaWNrZXJdIHNldCBkYXRlcGlja2VyIGxvY2FsZVwiO1xyXG4gICAgc3RhdGljIHJlYWRvbmx5IFNFTEVDVF9SQU5HRSA9IFwiW2RhdGVyYW5nZXBpY2tlcl0gc2VsZWN0IGRhdGVzIHJhbmdlXCI7XHJcbiAgICBjYWxjdWxhdGUoKTogQWN0aW9uO1xyXG4gICAgZm9ybWF0KCk6IEFjdGlvbjtcclxuICAgIGZsYWcoKTogQWN0aW9uO1xyXG4gICAgc2VsZWN0KGRhdGU6IERhdGUpOiBBY3Rpb247XHJcbiAgICBjaGFuZ2VWaWV3TW9kZShldmVudDogQnNEYXRlcGlja2VyVmlld01vZGUpOiBBY3Rpb247XHJcbiAgICBuYXZpZ2F0ZVRvKGV2ZW50OiBCc1ZpZXdOYXZpZ2F0aW9uRXZlbnQpOiBBY3Rpb247XHJcbiAgICBuYXZpZ2F0ZVN0ZXAoc3RlcDogVGltZVVuaXQpOiBBY3Rpb247XHJcbiAgICBzZXRPcHRpb25zKG9wdGlvbnM6IERhdGVwaWNrZXJSZW5kZXJPcHRpb25zKTogQWN0aW9uO1xyXG4gICAgc2VsZWN0UmFuZ2UodmFsdWU6IERhdGVbXSk6IEFjdGlvbjtcclxuICAgIGhvdmVyRGF5KGV2ZW50OiBDZWxsSG92ZXJFdmVudCk6IEFjdGlvbjtcclxuICAgIG1pbkRhdGUoZGF0ZTogRGF0ZSk6IEFjdGlvbjtcclxuICAgIG1heERhdGUoZGF0ZTogRGF0ZSk6IEFjdGlvbjtcclxuICAgIGRheXNEaXNhYmxlZChkYXlzOiBudW1iZXJbXSk6IEFjdGlvbjtcclxuICAgIGRhdGVzRGlzYWJsZWQoZGF0ZXM6IERhdGVbXSk6IEFjdGlvbjtcclxuICAgIGlzRGlzYWJsZWQodmFsdWU6IGJvb2xlYW4pOiBBY3Rpb247XHJcbiAgICBzZXREYXRlQ3VzdG9tQ2xhc3Nlcyh2YWx1ZTogRGF0ZXBpY2tlckRhdGVDdXN0b21DbGFzc2VzW10pOiBBY3Rpb247XHJcbiAgICBzZXRMb2NhbGUobG9jYWxlOiBzdHJpbmcpOiBBY3Rpb247XHJcbn1cclxuIl19