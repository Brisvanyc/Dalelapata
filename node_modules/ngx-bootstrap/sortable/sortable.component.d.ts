import { EventEmitter, TemplateRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { DraggableItem } from './draggable-item';
import { DraggableItemService } from './draggable-item.service';
import * as ɵngcc0 from '@angular/core';
export declare class SortableComponent implements ControlValueAccessor {
    private static globalZoneIndex;
    /** field name if input array consists of objects */
    fieldName: string;
    /** class name for items wrapper */
    wrapperClass: string;
    /** style object for items wrapper */
    wrapperStyle: {
        [key: string]: string;
    };
    /** class name for item */
    itemClass: string;
    /** style object for item */
    itemStyle: {
        [key: string]: string;
    };
    /** class name for active item */
    itemActiveClass: string;
    /** style object for active item */
    itemActiveStyle: {
        [key: string]: string;
    };
    /** class name for placeholder */
    placeholderClass: string;
    /** style object for placeholder */
    placeholderStyle: {
        [key: string]: string;
    };
    /** placeholder item which will be shown if collection is empty */
    placeholderItem: string;
    /** used to specify a custom item template. Template variables: item and index; */
    itemTemplate: TemplateRef<any>;
    /** fired on array change (reordering, insert, remove), same as <code>ngModelChange</code>.
     *  Returns new items collection as a payload.
     */
    onChange: EventEmitter<any[]>;
    showPlaceholder: boolean;
    activeItem: number;
    items: SortableItem[];
    onTouched: any;
    onChanged: any;
    private transfer;
    private currentZoneIndex;
    private _items;
    constructor(transfer: DraggableItemService);
    onItemDragstart(event: DragEvent, item: SortableItem, i: number): void;
    onItemDragover(event: DragEvent, i: number): void;
    cancelEvent(event: DragEvent): void;
    onDrop(item: DraggableItem): void;
    resetActiveItem(event: DragEvent): void;
    registerOnChange(callback: () => void): void;
    registerOnTouched(callback: () => void): void;
    writeValue(value: any[]): void;
    updatePlaceholderState(): void;
    getItemStyle(isActive: boolean): {};
    private initDragstartEvent;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SortableComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SortableComponent, "bs-sortable", ["bs-sortable"], {
    "wrapperClass": "wrapperClass";
    "wrapperStyle": "wrapperStyle";
    "itemClass": "itemClass";
    "itemStyle": "itemStyle";
    "itemActiveClass": "itemActiveClass";
    "itemActiveStyle": "itemActiveStyle";
    "placeholderClass": "placeholderClass";
    "placeholderStyle": "placeholderStyle";
    "placeholderItem": "placeholderItem";
    "fieldName": "fieldName";
    "itemTemplate": "itemTemplate";
}, {
    "onChange": "onChange";
}, never>;
}
export declare interface SortableItem {
    id: number;
    value: string;
    initData: any;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydGFibGUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInNvcnRhYmxlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3REEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBEcmFnZ2FibGVJdGVtIH0gZnJvbSAnLi9kcmFnZ2FibGUtaXRlbSc7XHJcbmltcG9ydCB7IERyYWdnYWJsZUl0ZW1TZXJ2aWNlIH0gZnJvbSAnLi9kcmFnZ2FibGUtaXRlbS5zZXJ2aWNlJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU29ydGFibGVDb21wb25lbnQgaW1wbGVtZW50cyBDb250cm9sVmFsdWVBY2Nlc3NvciB7XHJcbiAgICBwcml2YXRlIHN0YXRpYyBnbG9iYWxab25lSW5kZXg7XHJcbiAgICAvKiogZmllbGQgbmFtZSBpZiBpbnB1dCBhcnJheSBjb25zaXN0cyBvZiBvYmplY3RzICovXHJcbiAgICBmaWVsZE5hbWU6IHN0cmluZztcclxuICAgIC8qKiBjbGFzcyBuYW1lIGZvciBpdGVtcyB3cmFwcGVyICovXHJcbiAgICB3cmFwcGVyQ2xhc3M6IHN0cmluZztcclxuICAgIC8qKiBzdHlsZSBvYmplY3QgZm9yIGl0ZW1zIHdyYXBwZXIgKi9cclxuICAgIHdyYXBwZXJTdHlsZToge1xyXG4gICAgICAgIFtrZXk6IHN0cmluZ106IHN0cmluZztcclxuICAgIH07XHJcbiAgICAvKiogY2xhc3MgbmFtZSBmb3IgaXRlbSAqL1xyXG4gICAgaXRlbUNsYXNzOiBzdHJpbmc7XHJcbiAgICAvKiogc3R5bGUgb2JqZWN0IGZvciBpdGVtICovXHJcbiAgICBpdGVtU3R5bGU6IHtcclxuICAgICAgICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XHJcbiAgICB9O1xyXG4gICAgLyoqIGNsYXNzIG5hbWUgZm9yIGFjdGl2ZSBpdGVtICovXHJcbiAgICBpdGVtQWN0aXZlQ2xhc3M6IHN0cmluZztcclxuICAgIC8qKiBzdHlsZSBvYmplY3QgZm9yIGFjdGl2ZSBpdGVtICovXHJcbiAgICBpdGVtQWN0aXZlU3R5bGU6IHtcclxuICAgICAgICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XHJcbiAgICB9O1xyXG4gICAgLyoqIGNsYXNzIG5hbWUgZm9yIHBsYWNlaG9sZGVyICovXHJcbiAgICBwbGFjZWhvbGRlckNsYXNzOiBzdHJpbmc7XHJcbiAgICAvKiogc3R5bGUgb2JqZWN0IGZvciBwbGFjZWhvbGRlciAqL1xyXG4gICAgcGxhY2Vob2xkZXJTdHlsZToge1xyXG4gICAgICAgIFtrZXk6IHN0cmluZ106IHN0cmluZztcclxuICAgIH07XHJcbiAgICAvKiogcGxhY2Vob2xkZXIgaXRlbSB3aGljaCB3aWxsIGJlIHNob3duIGlmIGNvbGxlY3Rpb24gaXMgZW1wdHkgKi9cclxuICAgIHBsYWNlaG9sZGVySXRlbTogc3RyaW5nO1xyXG4gICAgLyoqIHVzZWQgdG8gc3BlY2lmeSBhIGN1c3RvbSBpdGVtIHRlbXBsYXRlLiBUZW1wbGF0ZSB2YXJpYWJsZXM6IGl0ZW0gYW5kIGluZGV4OyAqL1xyXG4gICAgaXRlbVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgLyoqIGZpcmVkIG9uIGFycmF5IGNoYW5nZSAocmVvcmRlcmluZywgaW5zZXJ0LCByZW1vdmUpLCBzYW1lIGFzIDxjb2RlPm5nTW9kZWxDaGFuZ2U8L2NvZGU+LlxyXG4gICAgICogIFJldHVybnMgbmV3IGl0ZW1zIGNvbGxlY3Rpb24gYXMgYSBwYXlsb2FkLlxyXG4gICAgICovXHJcbiAgICBvbkNoYW5nZTogRXZlbnRFbWl0dGVyPGFueVtdPjtcclxuICAgIHNob3dQbGFjZWhvbGRlcjogYm9vbGVhbjtcclxuICAgIGFjdGl2ZUl0ZW06IG51bWJlcjtcclxuICAgIGl0ZW1zOiBTb3J0YWJsZUl0ZW1bXTtcclxuICAgIG9uVG91Y2hlZDogYW55O1xyXG4gICAgb25DaGFuZ2VkOiBhbnk7XHJcbiAgICBwcml2YXRlIHRyYW5zZmVyO1xyXG4gICAgcHJpdmF0ZSBjdXJyZW50Wm9uZUluZGV4O1xyXG4gICAgcHJpdmF0ZSBfaXRlbXM7XHJcbiAgICBjb25zdHJ1Y3Rvcih0cmFuc2ZlcjogRHJhZ2dhYmxlSXRlbVNlcnZpY2UpO1xyXG4gICAgb25JdGVtRHJhZ3N0YXJ0KGV2ZW50OiBEcmFnRXZlbnQsIGl0ZW06IFNvcnRhYmxlSXRlbSwgaTogbnVtYmVyKTogdm9pZDtcclxuICAgIG9uSXRlbURyYWdvdmVyKGV2ZW50OiBEcmFnRXZlbnQsIGk6IG51bWJlcik6IHZvaWQ7XHJcbiAgICBjYW5jZWxFdmVudChldmVudDogRHJhZ0V2ZW50KTogdm9pZDtcclxuICAgIG9uRHJvcChpdGVtOiBEcmFnZ2FibGVJdGVtKTogdm9pZDtcclxuICAgIHJlc2V0QWN0aXZlSXRlbShldmVudDogRHJhZ0V2ZW50KTogdm9pZDtcclxuICAgIHJlZ2lzdGVyT25DaGFuZ2UoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiB2b2lkO1xyXG4gICAgcmVnaXN0ZXJPblRvdWNoZWQoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiB2b2lkO1xyXG4gICAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55W10pOiB2b2lkO1xyXG4gICAgdXBkYXRlUGxhY2Vob2xkZXJTdGF0ZSgpOiB2b2lkO1xyXG4gICAgZ2V0SXRlbVN0eWxlKGlzQWN0aXZlOiBib29sZWFuKToge307XHJcbiAgICBwcml2YXRlIGluaXREcmFnc3RhcnRFdmVudDtcclxufVxyXG5leHBvcnQgZGVjbGFyZSBpbnRlcmZhY2UgU29ydGFibGVJdGVtIHtcclxuICAgIGlkOiBudW1iZXI7XHJcbiAgICB2YWx1ZTogc3RyaW5nO1xyXG4gICAgaW5pdERhdGE6IGFueTtcclxufVxyXG4iXX0=