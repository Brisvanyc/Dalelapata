/** Provides default configuration values for timepicker */
import * as ɵngcc0 from '@angular/core';
export declare class TimepickerConfig {
    /** hours change step */
    hourStep: number;
    /** hours change step */
    minuteStep: number;
    /** seconds changes step */
    secondsStep: number;
    /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */
    showMeridian: boolean;
    /** meridian labels based on locale */
    meridians: string[];
    /** if true hours and minutes fields will be readonly */
    readonlyInput: boolean;
    /** if true hours and minutes fields will be disabled */
    disabled: boolean;
    /** if true scroll inside hours and minutes inputs will change time */
    mousewheel: boolean;
    /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */
    arrowkeys: boolean;
    /** if true spinner arrows above and below the inputs will be shown */
    showSpinners: boolean;
    /** show seconds in timepicker */
    showSeconds: boolean;
    /** show minutes in timepicker */
    showMinutes: boolean;
    /** minimum time user can select */
    min: Date;
    /** maximum time user can select */
    max: Date;
    /** placeholder for hours field in timepicker */
    hoursPlaceholder: string;
    /** placeholder for minutes field in timepicker */
    minutesPlaceholder: string;
    /** placeholder for seconds field in timepicker */
    secondsPlaceholder: string;
    /** hours aria label */
    ariaLabelHours: string;
    /** minutes aria label */
    ariaLabelMinutes: string;
    /** seconds aria label */
    ariaLabelSeconds: string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TimepickerConfig>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<TimepickerConfig>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZXBpY2tlci5jb25maWcuZC50cyIsInNvdXJjZXMiOlsidGltZXBpY2tlci5jb25maWcuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXlDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBQcm92aWRlcyBkZWZhdWx0IGNvbmZpZ3VyYXRpb24gdmFsdWVzIGZvciB0aW1lcGlja2VyICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFRpbWVwaWNrZXJDb25maWcge1xyXG4gICAgLyoqIGhvdXJzIGNoYW5nZSBzdGVwICovXHJcbiAgICBob3VyU3RlcDogbnVtYmVyO1xyXG4gICAgLyoqIGhvdXJzIGNoYW5nZSBzdGVwICovXHJcbiAgICBtaW51dGVTdGVwOiBudW1iZXI7XHJcbiAgICAvKiogc2Vjb25kcyBjaGFuZ2VzIHN0ZXAgKi9cclxuICAgIHNlY29uZHNTdGVwOiBudW1iZXI7XHJcbiAgICAvKiogaWYgdHJ1ZSB3b3JrcyBpbiAxMkggbW9kZSBhbmQgZGlzcGxheXMgQU0vUE0uIElmIGZhbHNlIHdvcmtzIGluIDI0SCBtb2RlIGFuZCBoaWRlcyBBTS9QTSAqL1xyXG4gICAgc2hvd01lcmlkaWFuOiBib29sZWFuO1xyXG4gICAgLyoqIG1lcmlkaWFuIGxhYmVscyBiYXNlZCBvbiBsb2NhbGUgKi9cclxuICAgIG1lcmlkaWFuczogc3RyaW5nW107XHJcbiAgICAvKiogaWYgdHJ1ZSBob3VycyBhbmQgbWludXRlcyBmaWVsZHMgd2lsbCBiZSByZWFkb25seSAqL1xyXG4gICAgcmVhZG9ubHlJbnB1dDogYm9vbGVhbjtcclxuICAgIC8qKiBpZiB0cnVlIGhvdXJzIGFuZCBtaW51dGVzIGZpZWxkcyB3aWxsIGJlIGRpc2FibGVkICovXHJcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcclxuICAgIC8qKiBpZiB0cnVlIHNjcm9sbCBpbnNpZGUgaG91cnMgYW5kIG1pbnV0ZXMgaW5wdXRzIHdpbGwgY2hhbmdlIHRpbWUgKi9cclxuICAgIG1vdXNld2hlZWw6IGJvb2xlYW47XHJcbiAgICAvKiogaWYgdHJ1ZSB0aGUgdmFsdWVzIG9mIGhvdXJzIGFuZCBtaW51dGVzIGNhbiBiZSBjaGFuZ2VkIHVzaW5nIHRoZSB1cC9kb3duIGFycm93IGtleXMgb24gdGhlIGtleWJvYXJkICovXHJcbiAgICBhcnJvd2tleXM6IGJvb2xlYW47XHJcbiAgICAvKiogaWYgdHJ1ZSBzcGlubmVyIGFycm93cyBhYm92ZSBhbmQgYmVsb3cgdGhlIGlucHV0cyB3aWxsIGJlIHNob3duICovXHJcbiAgICBzaG93U3Bpbm5lcnM6IGJvb2xlYW47XHJcbiAgICAvKiogc2hvdyBzZWNvbmRzIGluIHRpbWVwaWNrZXIgKi9cclxuICAgIHNob3dTZWNvbmRzOiBib29sZWFuO1xyXG4gICAgLyoqIHNob3cgbWludXRlcyBpbiB0aW1lcGlja2VyICovXHJcbiAgICBzaG93TWludXRlczogYm9vbGVhbjtcclxuICAgIC8qKiBtaW5pbXVtIHRpbWUgdXNlciBjYW4gc2VsZWN0ICovXHJcbiAgICBtaW46IERhdGU7XHJcbiAgICAvKiogbWF4aW11bSB0aW1lIHVzZXIgY2FuIHNlbGVjdCAqL1xyXG4gICAgbWF4OiBEYXRlO1xyXG4gICAgLyoqIHBsYWNlaG9sZGVyIGZvciBob3VycyBmaWVsZCBpbiB0aW1lcGlja2VyICovXHJcbiAgICBob3Vyc1BsYWNlaG9sZGVyOiBzdHJpbmc7XHJcbiAgICAvKiogcGxhY2Vob2xkZXIgZm9yIG1pbnV0ZXMgZmllbGQgaW4gdGltZXBpY2tlciAqL1xyXG4gICAgbWludXRlc1BsYWNlaG9sZGVyOiBzdHJpbmc7XHJcbiAgICAvKiogcGxhY2Vob2xkZXIgZm9yIHNlY29uZHMgZmllbGQgaW4gdGltZXBpY2tlciAqL1xyXG4gICAgc2Vjb25kc1BsYWNlaG9sZGVyOiBzdHJpbmc7XHJcbiAgICAvKiogaG91cnMgYXJpYSBsYWJlbCAqL1xyXG4gICAgYXJpYUxhYmVsSG91cnM6IHN0cmluZztcclxuICAgIC8qKiBtaW51dGVzIGFyaWEgbGFiZWwgKi9cclxuICAgIGFyaWFMYWJlbE1pbnV0ZXM6IHN0cmluZztcclxuICAgIC8qKiBzZWNvbmRzIGFyaWEgbGFiZWwgKi9cclxuICAgIGFyaWFMYWJlbFNlY29uZHM6IHN0cmluZztcclxufVxyXG4iXX0=