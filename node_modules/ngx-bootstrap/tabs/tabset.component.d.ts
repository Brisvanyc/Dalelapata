import { OnDestroy, Renderer2, ElementRef } from '@angular/core';
import { TabDirective } from './tab.directive';
import { TabsetConfig } from './tabset.config';
import * as ɵngcc0 from '@angular/core';
export declare class TabsetComponent implements OnDestroy {
    private renderer;
    private elementRef;
    /** if true tabs will be placed vertically */
    vertical: boolean;
    /** if true tabs fill the container and have a consistent width */
    justified: boolean;
    /** navigation context class: 'tabs' or 'pills' */
    type: string;
    clazz: boolean;
    tabs: TabDirective[];
    classMap: {
        [key: string]: boolean;
    };
    /** aria label for tab list */
    ariaLabel: string;
    protected isDestroyed: boolean;
    protected _vertical: boolean;
    protected _justified: boolean;
    protected _type: string;
    constructor(config: TabsetConfig, renderer: Renderer2, elementRef: ElementRef);
    ngOnDestroy(): void;
    addTab(tab: TabDirective): void;
    removeTab(tab: TabDirective, options?: {
        reselect: boolean;
        emit: boolean;
    }): void;
    keyNavActions(event: KeyboardEvent, index: number): void;
    protected getClosestTabIndex(index: number): number;
    protected hasAvailableTabs(index: number): boolean;
    protected setClassMap(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TabsetComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TabsetComponent, "tabset", never, {
    "vertical": "vertical";
    "justified": "justified";
    "type": "type";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFic2V0LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJ0YWJzZXQuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQStCQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uRGVzdHJveSwgUmVuZGVyZXIyLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRhYkRpcmVjdGl2ZSB9IGZyb20gJy4vdGFiLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IFRhYnNldENvbmZpZyB9IGZyb20gJy4vdGFic2V0LmNvbmZpZyc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFRhYnNldENvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XHJcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xyXG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmO1xyXG4gICAgLyoqIGlmIHRydWUgdGFicyB3aWxsIGJlIHBsYWNlZCB2ZXJ0aWNhbGx5ICovXHJcbiAgICB2ZXJ0aWNhbDogYm9vbGVhbjtcclxuICAgIC8qKiBpZiB0cnVlIHRhYnMgZmlsbCB0aGUgY29udGFpbmVyIGFuZCBoYXZlIGEgY29uc2lzdGVudCB3aWR0aCAqL1xyXG4gICAganVzdGlmaWVkOiBib29sZWFuO1xyXG4gICAgLyoqIG5hdmlnYXRpb24gY29udGV4dCBjbGFzczogJ3RhYnMnIG9yICdwaWxscycgKi9cclxuICAgIHR5cGU6IHN0cmluZztcclxuICAgIGNsYXp6OiBib29sZWFuO1xyXG4gICAgdGFiczogVGFiRGlyZWN0aXZlW107XHJcbiAgICBjbGFzc01hcDoge1xyXG4gICAgICAgIFtrZXk6IHN0cmluZ106IGJvb2xlYW47XHJcbiAgICB9O1xyXG4gICAgLyoqIGFyaWEgbGFiZWwgZm9yIHRhYiBsaXN0ICovXHJcbiAgICBhcmlhTGFiZWw6IHN0cmluZztcclxuICAgIHByb3RlY3RlZCBpc0Rlc3Ryb3llZDogYm9vbGVhbjtcclxuICAgIHByb3RlY3RlZCBfdmVydGljYWw6IGJvb2xlYW47XHJcbiAgICBwcm90ZWN0ZWQgX2p1c3RpZmllZDogYm9vbGVhbjtcclxuICAgIHByb3RlY3RlZCBfdHlwZTogc3RyaW5nO1xyXG4gICAgY29uc3RydWN0b3IoY29uZmlnOiBUYWJzZXRDb25maWcsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpO1xyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcclxuICAgIGFkZFRhYih0YWI6IFRhYkRpcmVjdGl2ZSk6IHZvaWQ7XHJcbiAgICByZW1vdmVUYWIodGFiOiBUYWJEaXJlY3RpdmUsIG9wdGlvbnM/OiB7XHJcbiAgICAgICAgcmVzZWxlY3Q6IGJvb2xlYW47XHJcbiAgICAgICAgZW1pdDogYm9vbGVhbjtcclxuICAgIH0pOiB2b2lkO1xyXG4gICAga2V5TmF2QWN0aW9ucyhldmVudDogS2V5Ym9hcmRFdmVudCwgaW5kZXg6IG51bWJlcik6IHZvaWQ7XHJcbiAgICBwcm90ZWN0ZWQgZ2V0Q2xvc2VzdFRhYkluZGV4KGluZGV4OiBudW1iZXIpOiBudW1iZXI7XHJcbiAgICBwcm90ZWN0ZWQgaGFzQXZhaWxhYmxlVGFicyhpbmRleDogbnVtYmVyKTogYm9vbGVhbjtcclxuICAgIHByb3RlY3RlZCBzZXRDbGFzc01hcCgpOiB2b2lkO1xyXG59XHJcbiJdfQ==